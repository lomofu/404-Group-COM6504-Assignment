<!--nav-->
<svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
    <symbol id="exclamation-triangle-fill" fill="currentColor" viewBox="0 0 16 16">
        <path d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z"/>
    </symbol>
</svg>

<nav id="nav-bar" class="navbar flex-column navbar-expand-lg navbar-dark position-fixed fixed-top"
     style="z-index: 999">
    <div id="offline-alert" class="m-0 alert alert-danger w-100 alert-dismissible fade show rounded-0 border-0 mb-2"
         role="alert" style="display: none">
        <svg class="bi flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Danger:">
            <use xlink:href="#exclamation-triangle-fill"/>
        </svg>
        Your are offline now!
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"
                onclick="handleClose()">
        </button>
    </div>
    <div class="container">
        <!-- logo -->
        <div class="d-inline-flex align-content-center me-3">
            <a class="navbar-brand" href="/">
                <img class="ml-4" width="32" height="32" src="/img/icon-64.png" alt="icon">
            </a>
            <h2 class="my-auto d-lg-none text-light fst-normal">Mission<span class="purple">!</span></h2>
        </div>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavDropdown"
                aria-controls="navbarNavDropdown" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNavDropdown">
            <ul id="nav" class="navbar-nav">
                <!--render by js see@util.js-->
            </ul>
        </div>
        <div class="collapse navbar-collapse" id="navbarNavDropdown">
            <hr class="col-12 d-lg-none text-light">
            <div class="container my-3 my-lg-0">
                <div class="row justify-content-end">
                    <button class="btn btn-outline-light me-3 col-12 col-lg-3"
                            onclick="{window.location.href='/createStory'}">
                        Create a Story
                    </button>
                </div>
            </div>
        </div>
    </div>
</nav>

<div id="sync-toast"
     class="toast align-items-center text-white bg-warning border-0 position-fixed bottom-0 start-50 translate-middle-x mb-2"
     role="alert"
     aria-live="assertive" aria-atomic="true" style="z-index: 999;" data-bs-delay="99999999">
    <div class="d-flex">
        <div class="toast-body d-flex align-items-center">
            <div class="spinner-grow me-2" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
            <span>Start to upload offline stories to the sever</span>
        </div>
        <button type="button" class="btn-close btn-close-white me-1 m-auto" data-bs-dismiss="toast"
                aria-label="Close"></button>
    </div>
</div>

<script type="module">
    import {useDao} from "/js/db/dao.js";
    import {story} from "/js/public/api.js";

    const {storyDao} = await useDao();


    console.log("You are: ", navigator.onLine ? "Online mode" : "Offline mode");

    if (navigator.onLine) {
        uploadOfflineStory();
        const createBtn = document.getElementById('create-room-modal-btn');
        createBtn && (createBtn.disabled = false);
    } else {
        offlineHandler();
    }
    window.addEventListener('online', function () {
        uploadOfflineStory();
        document.getElementById('offline-alert').style.display = "none";
        document.getElementById('nav-bar').classList.remove('pt-0');
        const createBtn = document.getElementById('create-room-modal-btn');
        createBtn && (createBtn.disabled = false);
    });

    window.addEventListener('offline', () => offlineHandler());

    function offlineHandler() {
        document.getElementById('offline-alert').style.display = "block";
        document.getElementById('nav-bar').classList.add('pt-0');
        const createBtn = document.getElementById('create-room-modal-btn');
        createBtn && (createBtn.disabled = true);
    }

    function handleClose() {
        document.getElementById('nav-bar').classList.remove('pt-0');
    }

    async function uploadOfflineStory() {
        const data = await storyDao.getOfflineStoryList();

        if (data.length > 0) {
            const myToastEl = document.getElementById("sync-toast");
            const toast = bootstrap.Toast.getOrCreateInstance(myToastEl);

            try {
                await toast.show();
                await story.updateOfflineStoryList(data.map(({author, createTime, description, image, title}) => ({
                    author,
                    createTime,
                    description,
                    image,
                    title,
                    offline: false,
                    rooms: 0,
                })));
            } finally {
                setTimeout(async () => {
                    await toast.dispose();
                    switchPathToLoad();
                }, 1000);
            }
        }
    }

    function switchPathToLoad() {
        switch (window.location.pathname) {
            case '/storyDetail': {
                window.location.replace("/story")

                break;
            }
            case "/story": {
                window.location.reload();
            }
        }
    }


</script>
